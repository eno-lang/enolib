# Querying a missing field on the document when all elements are required

-- input

-- input

-- javascript
const document = enolib.parse(input);

document.allElementsRequired();
document.field('field');
-- javascript

-- php
$document = Enolib\Parser::parse($input);

$document->allElementsRequired();
$document->field('field');
-- php

-- python
document = enolib.parse(input)

document.all_elements_required()
document.field('field')
-- python

-- ruby
document = Enolib.parse(input)

document.all_elements_required
document.field('field')
-- ruby

## ValidationError

-- text
The field 'field' is missing - in case it has been specified look for typos and also check for correct capitalization.
-- text

# Querying a missing section on the document when all elements are required

-- input

-- input

-- javascript
const document = enolib.parse(input);

document.allElementsRequired();
document.section('section');
-- javascript

-- php
$document = Enolib\Parser::parse($input);

$document->allElementsRequired();
$document->section('section');
-- php

-- python
document = enolib.parse(input)

document.all_elements_required()
document.section('section')
-- python

-- ruby
document = Enolib.parse(input)

document.all_elements_required
document.section('section')
-- ruby

## ValidationError

-- text
The section 'section' is missing - in case it has been specified look for typos and also check for correct capitalization.
-- text

# Querying a missing field on the document when requiring all elements is explicitly disabled

-- input

-- input

-- javascript
const document = enolib.parse(input);

document.allElementsRequired(false);
document.field('field');
-- javascript

-- php
$document = Enolib\Parser::parse($input);

$document->allElementsRequired(false);
$document->field('field');
-- php

-- python
document = enolib.parse(input)

document.all_elements_required(False)
document.field('field')
-- python

-- ruby
document = Enolib.parse(input)

document.all_elements_required(false)
document.field('field')
-- ruby

## Passes

# Querying a missing field on the document when requiring all elements is enabled and disabled again

-- input

-- input

-- javascript
const document = enolib.parse(input);

document.allElementsRequired(true);
document.allElementsRequired(false);
document.field('field');
-- javascript

-- php
$document = Enolib\Parser::parse($input);

$document->allElementsRequired(true);
$document->allElementsRequired(false);
$document->field('field');
-- php

-- python
document = enolib.parse(input)

document.all_elements_required(True)
document.all_elements_required(False)
document.field('field')
-- python

-- ruby
document = Enolib.parse(input)

document.all_elements_required(true)
document.all_elements_required(false)
document.field('field')
-- ruby

## Passes

# Querying a missing but explicitly optional element on the document when requiring all elements is enabled 

-- input

-- input

-- javascript
const document = enolib.parse(input);

document.allElementsRequired();
document.optionalElement('element');
-- javascript

-- php
$document = Enolib\Parser::parse($input);

$document->allElementsRequired();
$document->optionalElement('element');
-- php

-- python
document = enolib.parse(input)

document.all_elements_required()
document.optional_element('element')
-- python

-- ruby
document = Enolib.parse(input)

document.all_elements_required
document.optional_element('element')
-- ruby

## Passes

# Querying a missing but explicitly optional empty on the document when requiring all elements is enabled 

-- input

-- input

-- javascript
const document = enolib.parse(input);

document.allElementsRequired();
document.optionalEmpty('empty');
-- javascript

-- php
$document = Enolib\Parser::parse($input);

$document->allElementsRequired();
$document->optionalEmpty('empty');
-- php

-- python
document = enolib.parse(input)

document.all_elements_required()
document.optional_empty('empty')
-- python

-- ruby
document = Enolib.parse(input)

document.all_elements_required
document.optional_empty('empty')
-- ruby

## Passes

# Querying a missing but explicitly optional field on the document when requiring all elements is enabled 

-- input

-- input

-- javascript
const document = enolib.parse(input);

document.allElementsRequired();
document.optionalField('field');
-- javascript

-- php
$document = Enolib\Parser::parse($input);

$document->allElementsRequired();
$document->optionalField('field');
-- php

-- python
document = enolib.parse(input)

document.all_elements_required()
document.optional_field('field')
-- python

-- ruby
document = Enolib.parse(input)

document.all_elements_required
document.optional_field('field')
-- ruby

## Passes

# Querying a missing but explicitly optional section on the document when requiring all elements is enabled 

-- input

-- input

-- javascript
const document = enolib.parse(input);

document.allElementsRequired();
document.optionalSection('section');
-- javascript

-- php
$document = Enolib\Parser::parse($input);

$document->allElementsRequired();
$document->optionalSection('section');
-- php

-- python
document = enolib.parse(input)

document.all_elements_required()
document.optional_section('section')
-- python

-- ruby
document = Enolib.parse(input)

document.all_elements_required
document.optional_section('section')
-- ruby

## Passes
