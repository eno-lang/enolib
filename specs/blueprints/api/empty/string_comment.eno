# Querying an existing, single-line, required string comment from an empty element

-- input
> comment
element:
-- input

-- javascript
const output = eno.parse(input).element('element').requiredStringComment();
-- javascript

-- php
$output = Eno\Parser::parse($input)->element('element')->requiredStringComment();
-- php

-- python
output = enolib.parse(input).element('element').required_string_comment()
-- python

-- ruby
output = Eno.parse(input).element('element').required_string_comment
-- ruby

## Result

-- string
comment
-- string

# Querying an existing, two-line, required string comment from an empty element

-- input
>comment
>  comment
element:
-- input

-- javascript
const output = eno.parse(input).element('element').requiredStringComment();
-- javascript

-- php
$output = Eno\Parser::parse($input)->element('element')->requiredStringComment();
-- php

-- python
output = enolib.parse(input).element('element').required_string_comment()
-- python

-- ruby
output = Eno.parse(input).element('element').required_string_comment
-- ruby

## Result

-- string
comment
  comment
-- string

# Querying an existing, required string comment with blank lines from an empty element

-- input
>
>     comment
>
>   comment
>
> comment
>
element:
-- input

-- javascript
const output = eno.parse(input).element('element').requiredStringComment();
-- javascript

-- php
$output = Eno\Parser::parse($input)->element('element')->requiredStringComment();
-- php

-- python
output = enolib.parse(input).element('element').required_string_comment()
-- python

-- ruby
output = Eno.parse(input).element('element').required_string_comment
-- ruby

## Result

-- string
    comment

  comment

comment
-- string

# Querying an optional, existing string comment from an empty element

-- input
> comment
element:
-- input

-- javascript
const output = eno.parse(input).element('element').optionalStringComment();
-- javascript

-- php
$output = Eno\Parser::parse($input)->element('element')->optionalStringComment();
-- php

-- python
output = enolib.parse(input).element('element').optional_string_comment()
-- python

-- ruby
output = Eno.parse(input).element('element').optional_string_comment
-- ruby

## Result

-- string
comment
-- string

# Querying an optional, missing string comment from an empty element

-- input
element:
-- input

-- javascript
const output = eno.parse(input).element('element').optionalStringComment();
-- javascript

-- php
$output = Eno\Parser::parse($input)->element('element')->optionalStringComment();
-- php

-- python
output = enolib.parse(input).element('element').optional_string_comment()
-- python

-- ruby
output = Eno.parse(input).element('element').optional_string_comment
-- ruby

## Nothing
