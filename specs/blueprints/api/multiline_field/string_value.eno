# Querying an existing required string value from a multline field

-- input
-- multiline_field
value
-- multiline_field
-- input

-- javascript
const output = enolib.parse(input).field('multiline_field').requiredStringValue();
-- javascript

-- php
$output = Enolib\Parser::parse($input)->field('multiline_field')->requiredStringValue();
-- php

-- python
output = enolib.parse(input).field('multiline_field').required_string_value()
-- python

-- ruby
output = Enolib.parse(input).field('multiline_field').required_string_value
-- ruby

## Result

-- string
value
-- string

# Querying an existing optional string value from a multline field

-- input
-- multiline_field
value
-- multiline_field
-- input

-- javascript
const output = enolib.parse(input).field('multiline_field').optionalStringValue();
-- javascript

-- php
$output = Enolib\Parser::parse($input)->field('multiline_field')->optionalStringValue();
-- php

-- python
output = enolib.parse(input).field('multiline_field').optional_string_value()
-- python

-- ruby
output = Enolib.parse(input).field('multiline_field').optional_string_value
-- ruby

## Result

-- string
value
-- string

# Querying a missing optional string value from a multline field

-- input
-- multiline_field
-- multiline_field
-- input

-- javascript
const output = enolib.parse(input).field('multiline_field').optionalStringValue();
-- javascript

-- php
$output = Enolib\Parser::parse($input)->field('multiline_field')->optionalStringValue();
-- php

-- python
output = enolib.parse(input).field('multiline_field').optional_string_value()
-- python

-- ruby
output = Enolib.parse(input).field('multiline_field').optional_string_value
-- ruby

## Nothing
