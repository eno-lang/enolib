# Asserting everything was touched when the only present, empty field was not touched

-- input
field:
-- input

-- javascript
parse(input).assertAllTouched()
-- javascript

-- php
Enolib\Parser::parse($input)->assertAllTouched();
-- php

-- python
enolib.parse(input).assert_all_touched()
-- python

-- ruby
Enolib.parse(input).assert_all_touched
-- ruby

## ValidationError

-- text
This element was not expected, make sure it is at the right place in the document and that its key is not mis-typed.
-- text

-- snippet
   Line | Content
 >    1 | field:
-- snippet

selection: [0,0] => [0,6]

# Asserting everything was touched when the only present, empty field was touched (as an element)

-- input
field:
-- input

-- javascript
const document = parse(input);

document.element('field').touch();
document.assertAllTouched();
-- javascript

-- php
$document = Enolib\Parser::parse($input);

$document->element('field')->touch();
$document->assertAllTouched();
-- php

-- python
document = enolib.parse(input)

document.element('field').touch()
document.assert_all_touched()
-- python

-- ruby
document = Enolib.parse(input)

document.element('field').touch
document.assert_all_touched
-- ruby

## Passes

# Asserting everything was touched when the only present, empty field was touched (as a field)

-- input
field:
-- input

-- javascript
const document = parse(input);

document.field('field').touch();
document.assertAllTouched();
-- javascript

-- php
$document = Enolib\Parser::parse($input);

$document->field('field')->touch();
$document->assertAllTouched();
-- php

-- python
document = enolib.parse(input)

document.field('field').touch()
document.assert_all_touched()
-- python

-- ruby
document = Enolib.parse(input)

document.field('field').touch
document.assert_all_touched
-- ruby

## Passes