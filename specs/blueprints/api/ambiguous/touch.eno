# Asserting everything was touched when the only present, ambiguous element was not touched

-- input
ambiguous:
-- input

-- javascript
enolib.parse(input).assertAllTouched()
-- javascript

-- php
Enolib\Parser::parse($input)->assertAllTouched();
-- php

-- python
enolib.parse(input).assert_all_touched()
-- python

-- ruby
Enolib.parse(input).assert_all_touched
-- ruby

## ValidationError

-- text
This element was not expected, make sure it is at the right place in the document and that its key is not mis-typed.
-- text

-- snippet
   Line | Content
 >    1 | ambiguous:
-- snippet

selection: [0,0] => [0,10]

# Asserting everything was touched when the only present, ambiguous element was touched

-- input
ambiguous:
-- input

-- javascript
const document = enolib.parse(input);

document.element('ambiguous').touch();
document.assertAllTouched();
-- javascript

-- php
$document = Enolib\Parser::parse($input);

$document->element('ambiguous')->touch();
$document->assertAllTouched();
-- php

-- python
document = enolib.parse(input)

document.element('ambiguous').touch()
document.assert_all_touched()
-- python

-- ruby
document = Enolib.parse(input)

document.element('ambiguous').touch
document.assert_all_touched
-- ruby

## Passes

# Asserting everything was touched when the only present, ambiguous element was touched after typecasting to a field

-- input
ambiguous:
-- input

-- javascript
const document = enolib.parse(input);

document.field('ambiguous').touch();
document.assertAllTouched();
-- javascript

-- php
$document = Enolib\Parser::parse($input);

$document->field('ambiguous')->touch();
$document->assertAllTouched();
-- php

-- python
document = enolib.parse(input)

document.field('ambiguous').touch()
document.assert_all_touched()
-- python

-- ruby
document = Enolib.parse(input)

document.field('ambiguous').touch
document.assert_all_touched
-- ruby

## Passes

# Asserting everything was touched when the only present, ambiguous element was touched after typecasting to a fieldset

-- input
ambiguous:
-- input

-- javascript
const document = enolib.parse(input);

document.fieldset('ambiguous').touch();
document.assertAllTouched();
-- javascript

-- php
$document = Enolib\Parser::parse($input);

$document->fieldset('ambiguous')->touch();
$document->assertAllTouched();
-- php

-- python
document = enolib.parse(input)

document.fieldset('ambiguous').touch()
document.assert_all_touched()
-- python

-- ruby
document = Enolib.parse(input)

document.fieldset('ambiguous').touch
document.assert_all_touched
-- ruby

## Passes

# Asserting everything was touched when the only present, ambiguous element was touched after typecasting to a list

-- input
ambiguous:
-- input

-- javascript
const document = enolib.parse(input);

document.list('ambiguous').touch();
document.assertAllTouched();
-- javascript

-- php
$document = Enolib\Parser::parse($input);

$document->list('ambiguous')->touch();
$document->assertAllTouched();
-- php

-- python
document = enolib.parse(input)

document.list('ambiguous').touch()
document.assert_all_touched()
-- python

-- ruby
document = Enolib.parse(input)

document.list('ambiguous').touch
document.assert_all_touched
-- ruby

## Passes
