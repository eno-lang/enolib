# Querying a missing entry on a fieldset when all entries are required

-- input
fieldset:
-- input

-- javascript
const fieldset = enolib.parse(input).fieldset('fieldset');

fieldset.allEntriesRequired();
fieldset.entry('entry');
-- javascript

-- php
$fieldset = Eno\Parser::parse($input)->fieldset('fieldset');

$fieldset->allEntriesRequired();
$fieldset->entry('entry');
-- php

-- python
fieldset = enolib.parse(input).fieldset('fieldset')

fieldset.all_entries_required()
fieldset.entry('entry')
-- python

-- ruby
fieldset = Eno.parse(input).fieldset('fieldset')

fieldset.all_entries_required
fieldset.entry('entry')
-- ruby

## ValidationError

-- text
The fieldset entry 'entry' is missing - in case it has been specified look for typos and also check for correct capitalization.
-- text

# Querying a missing entry on a fieldset when all requiring all entries is explicitly enabled

-- input
fieldset:
-- input

-- javascript
const fieldset = enolib.parse(input).fieldset('fieldset');

fieldset.allEntriesRequired(true);
fieldset.entry('entry');
-- javascript

-- php
$fieldset = Eno\Parser::parse($input)->fieldset('fieldset');

$fieldset->allEntriesRequired(true);
$fieldset->entry('entry');
-- php

-- python
fieldset = enolib.parse(input).fieldset('fieldset')

fieldset.all_entries_required(True)
fieldset.entry('entry')
-- python

-- ruby
fieldset = Eno.parse(input).fieldset('fieldset')

fieldset.all_entries_required(true)
fieldset.entry('entry')
-- ruby

## ValidationError

-- text
The fieldset entry 'entry' is missing - in case it has been specified look for typos and also check for correct capitalization.
-- text

# Querying a missing entry on a fieldset when requiring all entries is explicitly disabled

-- input
fieldset:
-- input

-- javascript
const fieldset = enolib.parse(input).fieldset('fieldset');

fieldset.allEntriesRequired(false);
fieldset.entry('entry');
-- javascript

-- php
$fieldset = Eno\Parser::parse($input)->fieldset('fieldset');

$fieldset->allEntriesRequired(false);
$fieldset->entry('entry');
-- php

-- python
fieldset = enolib.parse(input).fieldset('fieldset')

fieldset.all_entries_required(False)
fieldset.entry('entry')
-- python

-- ruby
fieldset = Eno.parse(input).fieldset('fieldset')

fieldset.all_entries_required(false)
fieldset.entry('entry')
-- ruby

## Passes

# Querying a missing entry on a fieldset when requiring all entries is enabled and disabled again

-- input
fieldset:
-- input

-- javascript
const fieldset = enolib.parse(input).fieldset('fieldset');

fieldset.allEntriesRequired(true);
fieldset.allEntriesRequired(false);
fieldset.entry('entry');
-- javascript

-- php
$fieldset = Eno\Parser::parse($input)->fieldset('fieldset');

$fieldset->allEntriesRequired(true);
$fieldset->allEntriesRequired(false);
$fieldset->entry('entry');
-- php

-- python
fieldset = enolib.parse(input).fieldset('fieldset')

fieldset.all_entries_required(True)
fieldset.all_entries_required(False)
fieldset.entry('entry')
-- python

-- ruby
fieldset = Eno.parse(input).fieldset('fieldset')

fieldset.all_entries_required(true)
fieldset.all_entries_required(false)
fieldset.entry('entry')
-- ruby

## Passes
