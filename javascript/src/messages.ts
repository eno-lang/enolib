//  GENERATED ON 2022-04-10T18:01:38 - DO NOT EDIT MANUALLY

export default {
    contentHeader: 'Content',
    expectedAttribute: 'An attribute was expected.',
    expectedDocument: 'The document was expected.',
    expectedField: 'A field was expected.',
    expectedFields: 'Only fields were expected.',
    expectedFlag: 'A flag was expected.',
    expectedItem: 'An item was expected.',
    expectedSection: 'A section was expected.',
    expectedSections: 'Only sections were expected.',
    expectedSingleAttribute: 'Only a single attribute was expected.',
    expectedSingleElement: 'Only a single element was expected.',
    expectedSingleField: 'Only a single field was expected.',
    expectedSingleFlag: 'Only a single flag was expected.',
    expectedSingleSection: 'Only a single section was expected.',
    gutterHeader: 'Line',
    missingAttribute: 'A single attribute is required - it can have any key.',
    missingComment: 'A required comment for this element is missing.',
    missingElement: 'A single element is required - it can have any key.',
    missingEmbed: 'A single embed is required - it can have any key.',
    missingField: 'A single field is required - it can have any key.',
    missingFlag: 'A single flag is required - it can have any key.',
    missingSection: 'A single section is required - it can have any key.',
    unexpectedElement: 'This element was not expected, make sure it is at the right place in the document and that its key is not mis-typed.',
    attributeOutsideField: (line) => `The attribute in line ${line} is not contained within a field.`,
    attributeWithoutKey: (line) => `The attribute in line ${line} has no key.`,
    commentError: (message) => `There is a problem with the comment of this element: ${message}`,
    continuationOutsideField: (line) => `The continuation in line ${line} is not contained within a field.`,
    embedWithoutKey: (line) => `The embed in line ${line} has no key.`,
    expectedFieldWithKey: (key) => `A field with the key '${key}' was expected.`,
    expectedFieldsWithKey: (key) => `Only fields with the key '${key}' were expected.`,
    expectedFlagWithKey: (key) => `A flag with the key '${key}' was expected.`,
    expectedSectionWithKey: (key) => `A section with the key '${key}' was expected.`,
    expectedSectionsWithKey: (key) => `Only sections with the key '${key}' were expected.`,
    expectedSingleAttributeWithKey: (key) => `Only a single attribute with the key '${key}' was expected.`,
    expectedSingleElementWithKey: (key) => `Only a single element with the key '${key}' was expected.`,
    expectedSingleFieldWithKey: (key) => `Only a single field with the key '${key}' was expected.`,
    expectedSingleFlagWithKey: (key) => `Only a single flag with the key '${key}' was expected.`,
    expectedSingleSectionWithKey: (key) => `Only a single section with the key '${key}' was expected.`,
    fieldWithoutKey: (line) => `The field in line ${line} has no key.`,
    itemOutsideField: (line) => `The item in line ${line} is not contained within a field.`,
    keyError: (message) => `There is a problem with the key of this element: ${message}`,
    missingAttributeValue: (key) => `The attribute '${key}' must contain a value.`,
    missingAttributeWithKey: (key) => `The attribute '${key}' is missing - in case it has been specified look for typos and also check for correct capitalization.`,
    missingElementWithKey: (key) => `The element '${key}' is missing - in case it has been specified look for typos and also check for correct capitalization.`,
    missingEmbedWithKey: (key) => `The embed '${key}' is missing - in case it has been specified look for typos and also check for correct capitalization.`,
    missingFieldValue: (key) => `The field '${key}' must contain a value.`,
    missingFieldWithKey: (key) => `The field '${key}' is missing - in case it has been specified look for typos and also check for correct capitalization.`,
    missingFlagWithKey: (key) => `The flag '${key}' is missing - in case it has been specified look for typos and also check for correct capitalization.`,
    missingItemValue: (key) => `The field '${key}' may not contain empty items.`,
    missingSectionWithKey: (key) => `The section '${key}' is missing - in case it has been specified look for typos and also check for correct capitalization.`,
    mixedFieldContent: (line) => `The field in line ${line} must contain either only attributes, only items, or only a value.`,
    sectionLevelSkip: (line) => `The section in line ${line} is more than one level deeper than the one it is contained in.`,
    sectionWithoutKey: (line) => `The section in line ${line} has no key.`,
    unterminatedEmbed: (key, line) => `The embed '${key}' starting in line ${line} is not terminated until the end of the document.`,
    unterminatedEscapedKey: (line) => `The key escape sequence in line ${line} is not terminated before the end of the line.`,
    valueError: (message) => `There is a problem with the value of this element: ${message}`
};