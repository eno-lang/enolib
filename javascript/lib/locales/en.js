//  GENERATED ON 2022-03-29T14:08:57 - DO NOT EDIT MANUALLY

module.exports = {
  contentHeader: 'Content',
  expectedDocument: 'The document was expected.',
  expectedEmpty: 'An empty was expected.',
  expectedField: 'A field was expected.',
  expectedFields: 'Only fields were expected.',
  expectedFieldset: 'A fieldset was expected.',
  expectedFieldsetEntry: 'A fieldset entry was expected.',
  expectedFieldsets: 'Only fieldsets were expected.',
  expectedList: 'A list was expected.',
  expectedListItem: 'A list item was expected.',
  expectedLists: 'Only lists were expected.',
  expectedSection: 'A section was expected.',
  expectedSections: 'Only sections were expected.',
  expectedSingleElement: 'Only a single element was expected.',
  expectedSingleEmpty: 'Only a single empty was expected.',
  expectedSingleField: 'Only a single field was expected.',
  expectedSingleFieldset: 'Only a single fieldset was expected.',
  expectedSingleFieldsetEntry: 'Only a single fieldset entry was expected.',
  expectedSingleList: 'Only a single list was expected.',
  expectedSingleSection: 'Only a single section was expected.',
  gutterHeader: 'Line',
  missingComment: 'A required comment for this element is missing.',
  missingElement: 'A single element is required - it can have any key.',
  missingEmpty: 'A single empty is required - it can have any key.',
  missingField: 'A single field is required - it can have any key.',
  missingFieldset: 'A single fieldset is required - it can have any key.',
  missingFieldsetEntry: 'A single fieldset entry is required - it can have any key.',
  missingList: 'A single list is required - it can have any key.',
  missingSection: 'A single section is required - it can have any key.',
  unexpectedElement: 'This element was not expected, make sure it is at the right place in the document and that its key is not mis-typed.',
  commentError: (message) => `There is a problem with the comment of this element: ${message}`,
  expectedEmptyWithKey: (key) => `An empty with the key '${key}' was expected.`,
  expectedFieldWithKey: (key) => `A field with the key '${key}' was expected.`,
  expectedFieldsWithKey: (key) => `Only fields with the key '${key}' were expected.`,
  expectedFieldsetWithKey: (key) => `A fieldset with the key '${key}' was expected.`,
  expectedFieldsetsWithKey: (key) => `Only fieldsets with the key '${key}' were expected.`,
  expectedListWithKey: (key) => `A list with the key '${key}' was expected.`,
  expectedListsWithKey: (key) => `Only lists with the key '${key}' were expected.`,
  expectedSectionWithKey: (key) => `A section with the key '${key}' was expected.`,
  expectedSectionsWithKey: (key) => `Only sections with the key '${key}' were expected.`,
  expectedSingleElementWithKey: (key) => `Only a single element with the key '${key}' was expected.`,
  expectedSingleEmptyWithKey: (key) => `Only a single empty with the key '${key}' was expected.`,
  expectedSingleFieldWithKey: (key) => `Only a single field with the key '${key}' was expected.`,
  expectedSingleFieldsetEntryWithKey: (key) => `Only a single fieldset entry with the key '${key}' was expected.`,
  expectedSingleFieldsetWithKey: (key) => `Only a single fieldset with the key '${key}' was expected.`,
  expectedSingleListWithKey: (key) => `Only a single list with the key '${key}' was expected.`,
  expectedSingleSectionWithKey: (key) => `Only a single section with the key '${key}' was expected.`,
  invalidLine: (line) => `Line ${line} does not follow any specified pattern.`,
  keyError: (message) => `There is a problem with the key of this element: ${message}`,
  missingElementForContinuation: (line) => `Line ${line} contains a line continuation without a continuable element being specified before.`,
  missingElementWithKey: (key) => `The element '${key}' is missing - in case it has been specified look for typos and also check for correct capitalization.`,
  missingEmptyWithKey: (key) => `The empty '${key}' is missing - in case it has been specified look for typos and also check for correct capitalization.`,
  missingFieldValue: (key) => `The field '${key}' must contain a value.`,
  missingFieldWithKey: (key) => `The field '${key}' is missing - in case it has been specified look for typos and also check for correct capitalization.`,
  missingFieldsetEntryValue: (key) => `The fieldset entry '${key}' must contain a value.`,
  missingFieldsetEntryWithKey: (key) => `The fieldset entry '${key}' is missing - in case it has been specified look for typos and also check for correct capitalization.`,
  missingFieldsetForFieldsetEntry: (line) => `Line ${line} contains a fieldset entry without a fieldset being specified before.`,
  missingFieldsetWithKey: (key) => `The fieldset '${key}' is missing - in case it has been specified look for typos and also check for correct capitalization.`,
  missingListForListItem: (line) => `Line ${line} contains a list item without a list being specified before.`,
  missingListItemValue: (key) => `The list '${key}' may not contain empty items.`,
  missingListWithKey: (key) => `The list '${key}' is missing - in case it has been specified look for typos and also check for correct capitalization.`,
  missingSectionWithKey: (key) => `The section '${key}' is missing - in case it has been specified look for typos and also check for correct capitalization.`,
  sectionHierarchyLayerSkip: (line) => `Line ${line} starts a section that is more than one level deeper than the current one.`,
  unterminatedEscapedKey: (line) => `In line ${line} the key of an element is escaped, but the escape sequence is not terminated until the end of the line.`,
  unterminatedMultilineField: (key, line) => `The multiline field '${key}' starting in line ${line} is not terminated until the end of the document.`,
  valueError: (message) => `There is a problem with the value of this element: ${message}`
};