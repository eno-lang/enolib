#  GENERATED ON 2019-06-18T08:50:41 - DO NOT EDIT MANUALLY

content_header = 'Content'
expected_document = 'The document was expected.'
expected_empty = 'An empty was expected.'
expected_field = 'A field was expected.'
expected_fields = 'Only fields were expected.'
expected_fieldset = 'A fieldset was expected.'
expected_fieldset_entry = 'A fieldset entry was expected.'
expected_fieldsets = 'Only fieldsets were expected.'
expected_list = 'A list was expected.'
expected_list_item = 'A list item was expected.'
expected_lists = 'Only lists were expected.'
expected_section = 'A section was expected.'
expected_sections = 'Only sections were expected.'
expected_single_element = 'Only a single element was expected.'
expected_single_empty = 'Only a single empty was expected.'
expected_single_field = 'Only a single field was expected.'
expected_single_fieldset = 'Only a single fieldset was expected.'
expected_single_fieldset_entry = 'Only a single fieldset entry was expected.'
expected_single_list = 'Only a single list was expected.'
expected_single_section = 'Only a single section was expected.'
gutter_header = 'Line'
missing_comment = 'A required comment for this element is missing.'
missing_element = 'A single element is required - it can have any key.'
missing_empty = 'A single empty is required - it can have any key.'
missing_field = 'A single field is required - it can have any key.'
missing_fieldset = 'A single fieldset is required - it can have any key.'
missing_fieldset_entry = 'A single fieldset entry is required - it can have any key.'
missing_list = 'A single list is required - it can have any key.'
missing_section = 'A single section is required - it can have any key.'
unexpected_element = 'This element was not expected, make sure it is at the right place in the document and that its key is not mis-typed.'
comment_error = lambda message: f"There is a problem with the comment of this element: {message}"
cyclic_dependency = lambda line, key: f"In line {line} '{key}' is copied into itself."
expected_empty_with_key = lambda key: f"An empty with the key '{key}' was expected."
expected_field_with_key = lambda key: f"A field with the key '{key}' was expected."
expected_fields_with_key = lambda key: f"Only fields with the key '{key}' were expected."
expected_fieldset_with_key = lambda key: f"A fieldset with the key '{key}' was expected."
expected_fieldsets_with_key = lambda key: f"Only fieldsets with the key '{key}' were expected."
expected_list_with_key = lambda key: f"A list with the key '{key}' was expected."
expected_lists_with_key = lambda key: f"Only lists with the key '{key}' were expected."
expected_section_with_key = lambda key: f"A section with the key '{key}' was expected."
expected_sections_with_key = lambda key: f"Only sections with the key '{key}' were expected."
expected_single_element_with_key = lambda key: f"Only a single element with the key '{key}' was expected."
expected_single_empty_with_key = lambda key: f"Only a single empty with the key '{key}' was expected."
expected_single_field_with_key = lambda key: f"Only a single field with the key '{key}' was expected."
expected_single_fieldset_entry_with_key = lambda key: f"Only a single fieldset entry with the key '{key}' was expected."
expected_single_fieldset_with_key = lambda key: f"Only a single fieldset with the key '{key}' was expected."
expected_single_list_with_key = lambda key: f"Only a single list with the key '{key}' was expected."
expected_single_section_with_key = lambda key: f"Only a single section with the key '{key}' was expected."
invalid_line = lambda line: f"Line {line} does not follow any specified pattern."
key_error = lambda message: f"There is a problem with the key of this element: {message}"
missing_element_for_continuation = lambda line: f"Line {line} contains a line continuation without a continuable element being specified before."
missing_element_with_key = lambda key: f"The element '{key}' is missing - in case it has been specified look for typos and also check for correct capitalization."
missing_empty_with_key = lambda key: f"The empty '{key}' is missing - in case it has been specified look for typos and also check for correct capitalization."
missing_field_value = lambda key: f"The field '{key}' must contain a value."
missing_field_with_key = lambda key: f"The field '{key}' is missing - in case it has been specified look for typos and also check for correct capitalization."
missing_fieldset_entry_value = lambda key: f"The fieldset entry '{key}' must contain a value."
missing_fieldset_entry_with_key = lambda key: f"The fieldset entry '{key}' is missing - in case it has been specified look for typos and also check for correct capitalization."
missing_fieldset_for_fieldset_entry = lambda line: f"Line {line} contains a fieldset entry without a fieldset being specified before."
missing_fieldset_with_key = lambda key: f"The fieldset '{key}' is missing - in case it has been specified look for typos and also check for correct capitalization."
missing_list_for_list_item = lambda line: f"Line {line} contains a list item without a list being specified before."
missing_list_item_value = lambda key: f"The list '{key}' may not contain empty items."
missing_list_with_key = lambda key: f"The list '{key}' is missing - in case it has been specified look for typos and also check for correct capitalization."
missing_section_with_key = lambda key: f"The section '{key}' is missing - in case it has been specified look for typos and also check for correct capitalization."
non_section_element_not_found = lambda line, key: f"In line {line} the non-section element '{key}' should be copied, but it was not found."
section_hierarchy_layer_skip = lambda line: f"Line {line} starts a section that is more than one level deeper than the current one."
section_not_found = lambda line, key: f"In line {line} the section '{key}' should be copied, but it was not found."
two_or_more_templates_found = lambda key: f"There are at least two elements with the key '{key}' that qualify for being copied here, it is not clear which to copy."
unterminated_escaped_key = lambda line: f"In line {line} the key of an element is escaped, but the escape sequence is not terminated until the end of the line."
unterminated_multiline_field = lambda key, line: f"The multiline field '{key}' starting in line {line} is not terminated until the end of the document."
value_error = lambda message: f"There is a problem with the value of this element: {message}"